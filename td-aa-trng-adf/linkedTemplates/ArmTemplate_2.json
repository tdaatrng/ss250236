{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "td-aa-trng-adf"
		},
		"adf_batch_ls_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'adf_batch_ls'"
		},
		"adf_batch_ls_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "tdaabapoc"
		},
		"adf_batch_ls_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://tdaabapoc.eastus.batch.azure.com"
		},
		"adf_batch_ls_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "tdaapid"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/hg250013_flat_par_sink1_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADF_Demo_DS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "testfilename",
						"folderPath": "output1",
						"fileSystem": "hg250013"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "FlightNo",
						"type": "UTF8"
					},
					{
						"name": "Origin",
						"type": "UTF8"
					},
					{
						"name": "Dest",
						"type": "UTF8"
					},
					{
						"name": "FlightDate",
						"type": "UTF8"
					},
					{
						"name": "NoSalesReason",
						"type": "UTF8"
					},
					{
						"name": "TransmittingFlightAttd",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hg250013_flat_par_sink1_ds_for_parameter_demo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"destContainer": {
						"type": "string"
					},
					"destDirectory": {
						"type": "string"
					},
					"destFileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF_Demo_DS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().destFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().destDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().destContainer",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "FlightNo",
						"type": "UTF8"
					},
					{
						"name": "Origin",
						"type": "UTF8"
					},
					{
						"name": "Dest",
						"type": "UTF8"
					},
					{
						"name": "FlightDate",
						"type": "UTF8"
					},
					{
						"name": "NoSalesReason",
						"type": "UTF8"
					},
					{
						"name": "TransmittingFlightAttd",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hg250013_json_file_sink3_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADF_Demo_DS"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output3",
						"fileSystem": "hg250013"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hg250013_parameter_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADF_Demo_DS"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ADF_parameters_2.json",
						"folderPath": "config",
						"fileSystem": "hg250013"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"sourceDataBase": {
							"type": "string"
						},
						"sourceTable": {
							"type": "string"
						},
						"targetDataBase": {
							"type": "string"
						},
						"targetTable": {
							"type": "string"
						},
						"partitionCol": {
							"type": "string"
						},
						"columns": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hg250013_parameter_sink_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"destFileName": {
						"type": "string"
					},
					"destDirectory": {
						"type": "string"
					},
					"destContainer": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF_Demo_DS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().destFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().destDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().destContainer",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hg250013_raw_json_rest_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adls_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw",
						"fileSystem": "hg250013"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/parameter_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blob_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Audit Control Framework Dataset"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "adf_paramset.json",
						"container": "parameter"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"DatabaseServer": {
							"type": "string"
						},
						"UserName": {
							"type": "string"
						},
						"Password": {
							"type": "string"
						},
						"EmailTo": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_count_validation_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blob_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"data_file_name": {
						"type": "string"
					},
					"data_file_folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Audit Control Framework Dataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().data_file_name",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().data_file_folder",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_ctl_count')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blob_ls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ctl_file_name": {
						"type": "string"
					},
					"ctl_folder_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Audit Control Framework Dataset"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().ctl_file_name",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().ctl_folder_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adb_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4747255312543413.13.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "key_vault_ls",
							"type": "LinkedServiceReference"
						},
						"secretName": "td-aa-trng-adb-tkn-secret"
					},
					"existingClusterId": "0604-175127-mulch547"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_batch_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"accountName": "[parameters('adf_batch_ls_properties_typeProperties_accountName')]",
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('adf_batch_ls_accessKey')]"
					},
					"batchUri": "[parameters('adf_batch_ls_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('adf_batch_ls_properties_typeProperties_poolName')]",
					"linkedServiceName": {
						"referenceName": "batch_adls_ls",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/as186113_CSV_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extracting CSV file",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "CSV_File_Name",
							"value": {
								"value": "@substring(pipeline().parameters.File_Name,0,lastindexof(pipeline().parameters.File_Name,'.'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Extracting CTL file",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Extracting CSV file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "CTL_File_Name",
							"value": {
								"value": "@concat(substring(variables('CSV_File_Name'),0,lastindexof(variables('CSV_File_Name'),'.')),'.ctl')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check CTL File if exists",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Extracting CTL file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "CTL_File_Src",
								"type": "DatasetReference",
								"parameters": {
									"CTL_File_Name": {
										"value": "@variables('CTL_File_Name')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Email_Fail_Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Check CTL File if exists",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-48.eastus.logic.azure.com:443/workflows/27b0503ec47a4951aa8d0a747c7ccd25/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=b2-jmvnjIJK5gSU40VFp8FnBJs5Qh8VOg1fWGj43G7Y",
							"method": "POST",
							"headers": {
								"Content-type": "application/json"
							},
							"body": {
								"value": "@concat('{\n\"EmailTo\" : \"',pipeline().parameters.EmailTo,'\",\n\"Subject\" : \"An error has occurred in the ',pipeline().Pipeline,'-pipeline for  file-',pipeline().parameters.File_Name,'\",\n \"DataFactoryName\" : \"',pipeline().DataFactory,'\",\n \"PipelineName\" : \"',pipeline().Pipeline,'\", \n \"Activity\" : \"',pipeline().parameters.Activity,'\",\n \"ErrorMessage\" : \"',pipeline().parameters.ErrorMessage,'\",\n \"FileName\" : \"',pipeline().parameters.File_Name,'\"\n  }')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"File_Name": {
						"type": "string",
						"defaultValue": "Employee.csv.gz"
					},
					"EmailTo": {
						"type": "string",
						"defaultValue": "achal.saxena@teradata.com"
					},
					"Activity": {
						"type": "string",
						"defaultValue": "Lookup"
					},
					"ErrorMessage": {
						"type": "string",
						"defaultValue": "CTL File not received"
					},
					"Container_Name": {
						"type": "string",
						"defaultValue": "as186113"
					}
				},
				"variables": {
					"CSV_File_Name": {
						"type": "String"
					},
					"CTL_File_Name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "as186113"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/as186113_first_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "First_Pipeline",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "FirstName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "as186113_demo_file1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "as186113_demo_copy2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-25T23:05:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_delete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy file to sink container",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "gen_src_ds",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@pipeline().parameters.file_name",
										"type": "Expression"
									},
									"folder_name": {
										"value": "@pipeline().parameters.folder_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "gen_sink_ds",
								"type": "DatasetReference",
								"parameters": {
									"sink_folder_name": {
										"value": "@pipeline().parameters.output_folder_name",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete file Source Files",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy file to sink container",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "gen_src_ds",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@pipeline().parameters.file_name",
										"type": "Expression"
									},
									"folder_name": {
										"value": "@pipeline().parameters.folder_name",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					}
				],
				"parameters": {
					"file_name": {
						"type": "string"
					},
					"folder_name": {
						"type": "string"
					},
					"output_folder_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Audit Control Framework Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-25T23:05:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hg250013_ADB_REST_DATA_USECASE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Data_From_REST_API",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "hg250013_Rest_api_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "hg250013_raw_json_rest_ds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Get_Data_From_REST_API",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/harshit.goyal@qateradatacloud.com/UseCase_Demo_session_2"
						},
						"linkedServiceName": {
							"referenceName": "adb_ls",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ADB_Demo"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-25T23:05:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/hg250013_raw_json_rest_ds')]",
				"[concat(variables('factoryId'), '/linkedServices/adb_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hg250013_DataBricks_test_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/hg250013/TestAdfAdbIntegration"
						},
						"linkedServiceName": {
							"referenceName": "adb_ls",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ADB_Demo"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-25T23:05:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adb_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hg250013_parameter_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getParameterFromConfigFolder",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "hg250013_parameter_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "getParameterFromConfigFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "hg250013_flat_file_source_ds_for_parameter_demo",
								"type": "DatasetReference",
								"parameters": {
									"containerName": {
										"value": "@activity('getParameterFromConfigFolder').output.firstRow.sourceContainer",
										"type": "Expression"
									},
									"directoryName": {
										"value": "@activity('getParameterFromConfigFolder').output.firstRow.sourceDirectory",
										"type": "Expression"
									},
									"fileName": {
										"value": "@activity('getParameterFromConfigFolder').output.firstRow.sourceFileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "hg250013_flat_par_sink1_ds_for_parameter_demo",
								"type": "DatasetReference",
								"parameters": {
									"destContainer": {
										"value": "@activity('getParameterFromConfigFolder').output.firstRow.destContainer",
										"type": "Expression"
									},
									"destDirectory": {
										"value": "@activity('getParameterFromConfigFolder').output.firstRow.destDirectory",
										"type": "Expression"
									},
									"destFileName": {
										"value": "@activity('getParameterFromConfigFolder').output.firstRow.destFileName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "hg250013_flat_file_source_ds",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"columnCount"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"parameters": {
					"sourceFileName": {
						"type": "string",
						"defaultValue": "nosales.txt"
					}
				},
				"folder": {
					"name": "ADF_Demo"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-25T23:05:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/hg250013_parameter_ds')]",
				"[concat(variables('factoryId'), '/datasets/hg250013_flat_par_sink1_ds_for_parameter_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pt186024_Copy_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Copy_Data_CI_CD_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Copy_Data_CI_CD_Target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "pt186024"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sj186068_Abd_Adf_Test_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/hg250013/TestAdfAdbIntegration"
						},
						"linkedServiceName": {
							"referenceName": "adb_ls",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "gen_src_ds",
								"type": "DatasetReference",
								"parameters": {
									"file_name": "Employee.csv",
									"folder_name": "reject"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "gen_sink_ds",
								"type": "DatasetReference",
								"parameters": {
									"sink_folder_name": "input"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-25T23:05:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adb_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sj186068_FileEvent_Json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Create JSON file name",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "JSON_File_Name",
							"value": {
								"value": "@substring(pipeline().parameters.Source_File_Name,0,lastindexof(pipeline().parameters.Source_File_Name,'.'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Create CTL file name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Create JSON file name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "CTL_File_Name",
							"value": {
								"value": "@concat(substring(variables('JSON_File_Name'),0,lastindexof(variables('JSON_File_Name'),'.')),'.ctl')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check if control file is present",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Create CTL file name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "CTL_File",
								"type": "DatasetReference",
								"parameters": {
									"Container_Name": {
										"value": "@pipeline().parameters.Container_Name",
										"type": "Expression"
									},
									"Ctl_File_Name": {
										"value": "@variables('CTL_File_Name')",
										"type": "Expression"
									},
									"Ctl_Directory_Name": {
										"value": "@pipeline().parameters.Inbound_Directory",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "error_mail_notification_pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Check if control file is present",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "error_mail_notification_pipeline1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": {
									"value": "@pipeline().parameters.Email_To",
									"type": "Expression"
								},
								"Activity": "Lookup Activity",
								"ErrorMessage": {
									"value": "@concat('Control File -',variables('CTL_File_Name'),' not received.')",
									"type": "Expression"
								},
								"Pipe_line_Name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"Source_File_Name": {
									"value": "@pipeline().parameters.Source_File_Name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Get record count from data file",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Create csv file name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ZippedJsonSrc",
								"type": "DatasetReference",
								"parameters": {
									"Container_Name": {
										"value": "@pipeline().parameters.Container_Name",
										"type": "Expression"
									},
									"Inbound_Directory": {
										"value": "@pipeline().parameters.Inbound_Directory",
										"type": "Expression"
									},
									"JSON_File_Name": {
										"value": "@pipeline().parameters.Source_File_Name",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set data count variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get record count from data file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Data_Count",
							"value": {
								"value": "@string(activity('Get record count from data file').output.count)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set CTL count variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Check if control file is present",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Ctl_Count",
							"value": {
								"value": "@string(activity('Check if control file is present').output.firstrow.Prop_0)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Count Match between CTL and Data File",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set CTL count variable",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set data count variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('data_count'),variables('ctl_count'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "mail notification for count mismatch",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "error_mail_notification_pipeline1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": {
												"value": "@pipeline().parameters.Email_To",
												"type": "Expression"
											},
											"Activity": "If Activity",
											"ErrorMessage": "Count mismatch between Data and Ctl file",
											"Pipe_line_Name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"Source_File_Name": {
												"value": "@pipeline().parameters.Source_File_Name",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy file from inbound to input",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['transaction']['transaction_id']"
													},
													"sink": {
														"name": "transaction_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['transaction_type']"
													},
													"sink": {
														"name": "transaction_type",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['transaction_timestamp']"
													},
													"sink": {
														"name": "transaction_timestamp",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['cancellation_timestamp']"
													},
													"sink": {
														"name": "cancellation_timestamp",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['aadvantage_num']"
													},
													"sink": {
														"name": "aadvantage_num",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['offer_id']"
													},
													"sink": {
														"name": "offer_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['purchase_emp_id']"
													},
													"sink": {
														"name": "purchase_emp_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['cancellation_emp_id']"
													},
													"sink": {
														"name": "cancellation_emp_id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['tax']['gst']"
													},
													"sink": {
														"name": "gst",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['tax']['us1']"
													},
													"sink": {
														"name": "us1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['payment_method']"
													},
													"sink": {
														"name": "payment_method",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['total_price']"
													},
													"sink": {
														"name": "total_price",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['total_price_in_miles']"
													},
													"sink": {
														"name": "total_price_in_miles",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['sales_receipt_num']"
													},
													"sink": {
														"name": "sales_receipt_num",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['transaction']['credit_card_info']['credit_card_type']"
													},
													"sink": {
														"name": "credit_card_type",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ZippedJsonSrc",
											"type": "DatasetReference",
											"parameters": {
												"Container_Name": {
													"value": "@pipeline().parameters.Container_Name",
													"type": "Expression"
												},
												"Inbound_Directory": {
													"value": "@pipeline().parameters.Inbound_Directory",
													"type": "Expression"
												},
												"JSON_File_Name": {
													"value": "@pipeline().parameters.Source_File_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Unzipped_Input",
											"type": "DatasetReference",
											"parameters": {
												"Container_Name": {
													"value": "@pipeline().parameters.Container_Name",
													"type": "Expression"
												},
												"Input_Directory": {
													"value": "@pipeline().parameters.Input_Directory",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@variables('CSV_File_Name')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete zipped data file from inbound",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Insert Update in target table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Zipped_Source",
											"type": "DatasetReference",
											"parameters": {
												"Container_name": {
													"value": "@pipeline().parameters.Container_Name",
													"type": "Expression"
												},
												"Inbound_Directory": {
													"value": "@pipeline().parameters.Inbound_Directory",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@pipeline().parameters.Source_File_Name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "Delete ctl file from inbound",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Insert Update in target table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Zipped_Source",
											"type": "DatasetReference",
											"parameters": {
												"Container_name": {
													"value": "@pipeline().parameters.Container_Name",
													"type": "Expression"
												},
												"Inbound_Directory": {
													"value": "@pipeline().parameters.Inbound_Directory",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@variables('CTL_File_Name')",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "File name and date check of previously loaded",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Copy file from inbound to input",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/sj186068/UseCase/FileNameCheck",
										"baseParameters": {
											"FileName": {
												"value": "@variables('CSV_File_Name')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "error mail notification pipeline for etlcontrol",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "File name and date check of previously loaded",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "error_mail_notification_pipeline1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": {
												"value": "@pipeline().parameters.Email_To",
												"type": "Expression"
											},
											"Activity": "Etlcontrol source's databricks notebook",
											"ErrorMessage": "Databricks notebook failed with error",
											"Pipe_line_Name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"Source_File_Name": {
												"value": "@pipeline().parameters.Source_File_Name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "loading source in staging table",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "File name and date check of previously loaded",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/sj186068/UseCase/ld_source_stg",
										"baseParameters": {
											"CVS_File_Name": {
												"value": "@variables('CSV_File_Name')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "adb_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "error mail notification pipeline for staging table",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "loading source in staging table",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "error_mail_notification_pipeline1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": {
												"value": "@pipeline().parameters.Email_To",
												"type": "Expression"
											},
											"Activity": "Staging's databricks notebook",
											"ErrorMessage": "Databricks notebook failed with error",
											"Pipe_line_Name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"Source_File_Name": {
												"value": "@pipeline().parameters.Source_File_Name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Insert Update in target table",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "loading source in staging table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/sj186068/UseCase/stg_to_tgt"
									},
									"linkedServiceName": {
										"referenceName": "adb_ls",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "error mail notification pipeline for target table",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Insert Update in target table",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "error_mail_notification_pipeline1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": {
												"value": "@pipeline().parameters.Email_To",
												"type": "Expression"
											},
											"Activity": "Target's databricks notebook",
											"ErrorMessage": "Databricks notebook failed with error",
											"Pipe_line_Name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"Source_File_Name": {
												"value": "@pipeline().parameters.Source_File_Name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "success_mail_notification_pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Insert Update in target table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "success_mail_notification_pipeline1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EmailTo": {
												"value": "@pipeline().parameters.Email_To",
												"type": "Expression"
											},
											"Pipe_line_Name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"Source_File_Name": {
												"value": "@pipeline().parameters.Source_File_Name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Delete csv file generated in input",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Insert Update in target table",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Unzipped_Input",
											"type": "DatasetReference",
											"parameters": {
												"Container_Name": {
													"value": "@pipeline().parameters.Container_Name",
													"type": "Expression"
												},
												"Input_Directory": {
													"value": "@pipeline().parameters.Input_Directory",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@variables('CSV_File_Name')",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "Delete csv file generated in input -copy",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "error mail notification pipeline for etlcontrol",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Unzipped_Input",
											"type": "DatasetReference",
											"parameters": {
												"Container_Name": {
													"value": "@pipeline().parameters.Container_Name",
													"type": "Expression"
												},
												"Input_Directory": {
													"value": "@pipeline().parameters.Input_Directory",
													"type": "Expression"
												},
												"File_Name": {
													"value": "@variables('CSV_File_Name')",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "Create csv file name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Create JSON file name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "CSV_File_Name",
							"value": {
								"value": "@replace(variables('JSON_File_Name'),'.json','.csv')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"Source_File_Name": {
						"type": "string",
						"defaultValue": "transaction_20201015.json.gz"
					},
					"Inbound_Directory": {
						"type": "string",
						"defaultValue": "inbound"
					},
					"Input_Directory": {
						"type": "string",
						"defaultValue": "input"
					},
					"Container_Name": {
						"type": "string",
						"defaultValue": "sj186068"
					},
					"Email_To": {
						"type": "string",
						"defaultValue": "sumit.jain@teradata.com"
					}
				},
				"variables": {
					"CSV_File_Name": {
						"type": "String"
					},
					"CTL_File_Name": {
						"type": "String"
					},
					"Data_Count": {
						"type": "String"
					},
					"Ctl_Count": {
						"type": "String"
					},
					"JSON_File_Name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "sj186068"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adb_ls')]"
			]
		}
	]
}