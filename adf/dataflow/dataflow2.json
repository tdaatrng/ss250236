{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "hg250013_flat_file_source_ds",
						"type": "DatasetReference"
					},
					"name": "datasettest1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "prassink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedcolumntest1"
				}
			],
			"script": "source(output(\n\t\t{Flight#} as string,\n\t\tOrigin as string,\n\t\tDest as string,\n\t\tFlightDate as string,\n\t\tNoSalesReason as string,\n\t\tTransmittingFlightAttd as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> datasettest1\ndatasettest1 derive({Flight#} = ERROR_FUNCTION(''),\n\t\tOrigin = ERROR_FUNCTION(''),\n\t\tDest = ERROR_FUNCTION(''),\n\t\tFlightDate = ERROR_FUNCTION(''),\n\t\tNoSalesReason = ERROR_FUNCTION(''),\n\t\tTransmittingFlightAttd = ERROR_FUNCTION(''),\n\t\ttestfield = locate(NoSalesReason, 'Other')) ~> derivedcolumntest1\nderivedcolumntest1 sink(input(\n\t\tColumn_1 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}