{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Sink_Movies_pp186053",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pp186053DSCsv",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "SplittingMovieGenres"
				},
				{
					"name": "RankMovies"
				},
				{
					"name": "AggregateRatings"
				}
			],
			"script": "source(output(\n\t\tmovie as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as short,\n\t\tRating as short,\n\t\t{Rotton Tomato} as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 select(mapColumn(\n\t\tMOVIE_NAME = movie,\n\t\tMOVIE_TITLE = title,\n\t\tGENRE = genres,\n\t\tYEAR = year,\n\t\tRATING = Rating,\n\t\t{ROTTEN TOMATO} = {Rotton Tomato}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 filter(toInteger(YEAR) > 1950) ~> Filter1\nFilter1 derive(PRIMARY_GENRE = iif(locate(\"|\",GENRE) > 1,left(GENRE, locate(\"|\",GENRE)-1),GENRE)) ~> SplittingMovieGenres\nSplittingMovieGenres window(over(PRIMARY_GENRE,\n\t\tYEAR_OF_RELEASE = YEAR),\n\tdesc(ERROR_FUNCTION('ROTTEN TOMATO'), true),\n\tRatingsRank = rank()) ~> RankMovies\nRankMovies aggregate(groupBy(PRIMARY_GENRE,\n\t\tYEAR_OF_RELEASE),\n\tAverageRating = avg(toInteger(ROTTEN_TOMATO)),\n\t\t{Highest Rated} = first(MOVIE_NAME),\n\t\tLowestRated = last(MOVIE_NAME),\n\t\tNumberOfMovies = count()) ~> AggregateRatings\nAggregateRatings sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmapColumn(\n\t\tPrimaryGenre = PRIMARY_GENRE,\n\t\tYearOfRelease = YEAR_OF_RELEASE,\n\t\tAverageRating,\n\t\tHighestRated = {Highest Rated},\n\t\tLowestRated,\n\t\tNumberOfMovies\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}