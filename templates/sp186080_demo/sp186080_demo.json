{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"adb_ls": {
			"type": "string"
		},
		"adls_ls": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/sp186080_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Demo_Paramset",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Demo_param",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Inbound_Input",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Demo_Paramset",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"path": "$['name']"
										}
									},
									{
										"source": {
											"path": "$['ingredients']"
										},
										"sink": {
											"path": "$['ingredients']"
										}
									},
									{
										"source": {
											"path": "$['diet']"
										},
										"sink": {
											"path": "$['diet']"
										}
									},
									{
										"source": {
											"path": "$['prep_time']"
										},
										"sink": {
											"path": "$['prep_time']"
										}
									},
									{
										"source": {
											"path": "$['cook_time']"
										},
										"sink": {
											"path": "$['cook_time']"
										}
									},
									{
										"source": {
											"path": "$['flavor_profile']"
										},
										"sink": {
											"path": "$['flavor_profile']"
										}
									},
									{
										"source": {
											"path": "$['course']"
										},
										"sink": {
											"path": "$['course']"
										}
									},
									{
										"source": {
											"path": "$['state']"
										},
										"sink": {
											"path": "$['state']"
										}
									},
									{
										"source": {
											"path": "$['region']"
										},
										"sink": {
											"path": "$['region']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "IndianFood_inbound",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "IndianFood_Input",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "DemoNotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Inbound_Input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/sp186080/sp186080_demo"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('adb_ls')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success Email",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DemoNotebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EmailApp",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat(pipeline().Pipeline,' - Success !!')",
									"type": "Expression"
								},
								"Message": "Success. Notebook execution is completed successfully.",
								"EmailTo": "@activity('Demo_Paramset').output.firstRow.email_dl",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Failure email",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DemoNotebook",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EmailApp",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": "@concat(pipeline().Pipeline,' - Failed !!')",
								"Message": "Failed. Notebook execution has encountered an error.",
								"EmailTo": "@activity('Demo_Paramset').output.firstRow.email_dl",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Demo_param')]",
				"[concat(variables('factoryId'), '/datasets/IndianFood_inbound')]",
				"[concat(variables('factoryId'), '/datasets/IndianFood_Input')]",
				"[concat(variables('factoryId'), '/pipelines/EmailApp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Demo_param')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('adls_ls')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Demo_param.json",
						"folderPath": "config",
						"fileSystem": "sp186080"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"adf_paramfile": {
							"type": "string"
						},
						"adls_storage_account": {
							"type": "string"
						},
						"adls_path": {
							"type": "string"
						},
						"notification_app_lnk": {
							"type": "string"
						},
						"email_dl": {
							"type": "string"
						},
						"success_email": {
							"type": "string"
						},
						"failure_email": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IndianFood_inbound')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('adls_ls')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "indian_food.zip",
						"folderPath": "inbound",
						"fileSystem": "sp186080"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IndianFood_Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('adls_ls')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('IndianFood_',formatDateTime(utcnow(), 'yyyyMMdd'),'.json')",
							"type": "Expression"
						},
						"folderPath": "input",
						"fileSystem": "sp186080"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmailApp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web Services",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-57.eastus.logic.azure.com:443/workflows/6b15a7bfda3044eb93ac17e634bf86dd/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=G7FcnletLdJAsagAKYz4TlpmDLZB7A7GrKyg3XjwWaY",
							"method": "POST",
							"headers": {
								"Content-type": "application/json"
							},
							"body": {
								"value": "@concat('\n{\"DataFactoryName\": \"',pipeline().DataFactory,'\",\n   \"PipelineName\": \"',pipeline().parameters.PipelineName,'\",\n   \"Subject\": \"',pipeline().parameters.Subject,'\",\n   \"Message\": \"',pipeline().parameters.Message,'\",\n   \"EmailTo\": \"',pipeline().parameters.EmailTo,'\"\n\t}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"Subject": {
						"type": "string",
						"defaultValue": "test"
					},
					"Message": {
						"type": "string",
						"defaultValue": "test message"
					},
					"EmailTo": {
						"type": "string",
						"defaultValue": "shekhar.patil@teradata.com"
					},
					"PipelineName": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}